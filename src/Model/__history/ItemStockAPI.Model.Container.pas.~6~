unit ItemStockAPI.Model.Container;

interface

uses
  ItemStockAPI.DTO.Interfaces,
  ItemStockAPI.Model.Interfaces,
  ItemStockAPI.DAO.Interfaces;

type
  TMContainer = class(TInterfacedObject, IMContainer)
  private
    DTO: IContainerDTO;
    FDAO : IDContainer;
  public
    constructor Create(aObject: IContainerDTO);
    destructor Destroy; override;
    function ObterDTO: IContainerDTO;
  end;

implementation

uses
  ItemStockAPI.DAO.Container;

{ TMContainer }

constructor TMContainer.Create(aObject: IContainerDTO);
begin
  DTO := aObject;
  FDAO :=  TDContainer.Create(Self);
end;

destructor TMContainer.Destroy;
begin

  inherited;
end;

function TMContainer.ObterDTO: IContainerDTO;
begin
  Result := DTO;
end;

end.
