unit ItemStockAPI.Model.GerenciarFotos;

interface

uses
  ItemStockAPI.DTO.Interfaces,
  ItemStockAPI.Model.Interfaces;

type
  TGerenciarFotos = class(TInterfacedObject, IGerenciarFotos)
  private
    FInstance: IItemFotoDTO;
    function CaminhoArquivos : String;
    function ValidarFoto(aNome : String) : Boolean;
    function GerarNome : String;
  public
    class function New(aObject: IItemFotoDTO): IGerenciarFotos;
    constructor Create(aObject: IItemFotoDTO);
    destructor Destroy; override;
    procedure SalvarFoto;
  end;

implementation

uses
  System.SysUtils;

{ TGerenciarFotos }

function TGerenciarFotos.CaminhoArquivos: String;
begin
Result := ExtractFilePath(ParamStr(0)) + '/img/';
end;

constructor TGerenciarFotos.Create(aObject: IItemFotoDTO);
begin
  FInstance := aObject;
end;

destructor TGerenciarFotos.Destroy;
begin

  inherited;
end;

function TGerenciarFotos.GerarNome: String;
begin

end;

class function TGerenciarFotos.New(aObject: IItemFotoDTO): IGerenciarFotos;
begin
  Result := TGerenciarFotos.Create(aObject);
end;

procedure TGerenciarFotos.SalvarFoto;
begin

end;

function TGerenciarFotos.ValidarFoto(aNome: String): Boolean;
begin
  Result := FileExists(CaminhoArquivos + aNome);
end;

end.
